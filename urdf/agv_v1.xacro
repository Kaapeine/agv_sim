<?xml version="1.0"?>
<robot name="Diff_Drive" xmlns:xacro="http://www.ros.org/wiki/xacro">

<!-- /////////////////////////////////////////////////////-->

<material name="Black">
   <color rgba="0.0 0.0 0.0 1.0"/>
</material>

<material name="White">
   <color rgba="1.0 1.0 1.0 1.0"/>
</material>

<!-- ****************************************** -->

<xacro:property name="deg_to_rad" value="0.017453"/>
<xacro:property name="PI" value="3.14"/>

<!-- ************* Chassis ********************* -->

<xacro:property name="chassis_length" value="0.25"/>
<xacro:property name="chassis_width" value="0.20"/>
<xacro:property name="chassis_height" value="0.046"/>

<!-- **************** Wheel ******************* -->

<xacro:property name="wheel_radius" value="0.055"/>
<xacro:property name="wheel_width" value="0.020"/>
<xacro:property name="wheel_mass" value="0.2"/>

<!-- *************** Caster ******************** -->

<xacro:property name="caster_radius" value="${(wheel_radius-(chassis_height/2))/2}"/>
<xacro:property name="caster_mass" value="0.2"/>

<!-- *************** Laser ******************** -->

<xacro:property name="laser_radius" value="0.0375" />
<xacro:property name="laser_height" value="0.04" />
<xacro:property name="laser_mass" value="0.2" />

<!-- *************** Friction  ******************** -->

<xacro:property name="mu1" value="0" />
<xacro:property name="mu2" value="0" />

<!-- ************** Inertias ****************** -->

<xacro:macro name="wheel_inertia" params ="m r h">
  <inertial>
   <mass value="${m}"/>
   <inertia ixx="${m*(3*r*r+h*h)/12}"  ixy="0.0" ixz="0.0"
            iyy="${m*(3*r*r+h*h)/12}"  iyz= "0.0"
            izz="${m*r*r/2}"/>
   </inertial>
</xacro:macro>

<xacro:macro name= "chassis_inertia" params="mass">
  <inertial>
    <mass value="${mass}"/>
      <inertia ixx="0.1" ixy="0.0"
               iyy="0.1" iyz="0.0"
               izz="0.1" ixz="0.0"/>
   </inertial>
 </xacro:macro>

 <xacro:macro name= "caster_inertia" params="mass radius">
  <inertial>
    <mass value="${mass}"/>
      <inertia ixx="${2*mass*(radius*radius)/5}" ixy="0.0"
               iyy="${2*mass*(radius*radius)/5}" iyz="0.0"
               izz="${2*mass*(radius*radius)/5}" ixz="0.0"/>
   </inertial>
 </xacro:macro>

<!-- ******************* BASE LINK ********************* -->

 <link name="base_link">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 ${wheel_radius}"/>
      <geometry>
        <box size="${chassis_length} ${chassis_width} ${chassis_height}"/>
        <!-- mesh filename="$(find agvsim)/meshes/Wheel.igs)"/ -->
       </geometry>
     </visual>

    <collision>
      <origin rpy="0 0 0" xyz="0 0 ${wheel_radius}"/>
      <geometry>
        <box size="${chassis_length} ${chassis_width} ${chassis_height}"/>
      </geometry>
    </collision>

    <xacro:chassis_inertia mass="1.0"/>
 </link>

 <!-- <gazebo reference="base_link">
    <turnGravityOff>false</turnGravityOff>
 </gazebo> -->



<!-- ******************* WHEELS ********************* -->

<xacro:macro name="wheel" params= "prefix suffix X Y Z">
  <link name= "${prefix}_${suffix}_wheel">
    <visual>
     <origin rpy= "${PI/2} 0 0" xyz= "0 0 0"/>
     <geometry>
     	<cylinder length="${wheel_width}" radius= "${wheel_radius}"/>
     	<!-- mesh filename="$(find agvsim)/meshes/Chassis.igs)"/ -->
     </geometry>
     <mesh filename="$(find agvsim)/meshes/wheel.stl)"/>
     <material name= "Black"/>
    </visual>
    <collision>
     <origin rpy= "${PI/2} 0 0" xyz= "0 0 0"/>
     <geometry><cylinder length="${wheel_width}" radius= "${wheel_radius}"/></geometry>
     <surface>
        <friction>
          <ode>
            <mu>100</mu>
            <mu2>50</mu2>
            <slip1>1.0</slip1>
            <slip2>1.0</slip2>
          </ode>
        </friction>
      </surface>
    </collision>
  <xacro:wheel_inertia m="${wheel_mass}" r="${wheel_radius}" h="${wheel_width}"/>
  </link>

  <!-- <gazebo reference ="${prefix}_${suffix}_wheel">
     <turnGravityOff>false</turnGravityOff>
  </gazebo> -->

  <!-- gazebo reference ="${prefix}_${suffix}_wheel">
    <mu1 value="${mu1}"/>
    <mu2 value="${mu2}"/>
    <kp value="10000000.0"/>
    <kd value= "1.0"/>
  </gazebo -->

  <joint name="${prefix}_${suffix}_wheel_joint" type="continuous">
	  <parent link= "base_link"/>
	  <child link= "${prefix}_${suffix}_wheel"/>
	  <origin xyz= "${chassis_length/2 - wheel_radius} ${(chassis_width/2+wheel_width/2)*Z}  ${wheel_radius}" rpy="0 0 0"/>
	  <axis xyz="0 1 0"/>
  	  <limit effort= "10000" velocity="1000"/>
  	  <dynamics damping="1.0" friction="1.0"/>  
  </joint>

</xacro:macro>

<xacro:wheel prefix="right" suffix="back" X="0" Y="1" Z="-1"/>
<xacro:wheel prefix="left" suffix="back" X="0" Y="1" Z="1"/>

<!-- ******************* CASTER ********************* -->

<link name="casterwheel" >
        <visual>
          <geometry>
            <sphere radius="${caster_radius}" />
            <!-- mesh filename="$(find agvsim)/meshes/Caster_Wheel.igs)"/ -->
          </geometry>
        <origin xyz="0 0 0" />
        </visual>
        
        <collision>
            <geometry>
                <sphere radius="${caster_radius}" />
            </geometry>
            <origin xyz="0 0 0" />
            <surface>
              <friction>
                <ode>
                  <mu>100</mu>
                  <mu2>50</mu2>
                  <slip1>1.0</slip1>
                  <slip2>1.0</slip2>
                </ode>
              </friction>
            </surface>
        </collision>
        
       <xacro:caster_inertia mass="${caster_mass}" radius="${caster_radius}" />
</link>

<!-- <gazebo reference="casterwheel">
    <mu1>${mu1}</mu1>
    <mu2>${mu2}</mu2>
    <kp>1000000.0</kp>
    <kd>1.0</kd>
    <minDepth>0.001</minDepth>
    <turnGravityOff>false</turnGravityOff>
</gazebo> -->

<joint name="base_to_caster" type="fixed">
    <parent link="base_link" />
    <child link="casterwheel" />
    <origin xyz="${-chassis_length/2 + caster_radius} 0 ${caster_radius}" />
    <!-- <axis xyz="0 1 0"/>
  	<limit effort= "10000" velocity="1000"/>
  	<dynamics damping="1.0" friction="1.0"/>  -->
</joint>

<!-- ******************* LASER ********************* -->

<link name="laser">
          <visual>
              <geometry>
                  <cylinder length="${laser_height}" radius="${laser_radius}" />
              </geometry>
          </visual>
          
          <collision>
              <geometry>
                  <cylinder length="${laser_height}" radius="${laser_radius}" />
              </geometry>
          </collision>
          
          <xacro:wheel_inertia m="${laser_mass}" r="${laser_radius}" h="${laser_height}" />         
</link>
      
<joint name="base_to_laser" type="fixed">    
        <origin xyz="${-chassis_length/2 + laser_radius} 0 ${wheel_radius+chassis_height/2+laser_height/2}" rpy="0 0 0" />     
        <parent link="base_link"/>
        <child link="laser"/>
</joint>

<gazebo reference="laser">
	    <sensor type="gpu_ray" name="head_hokuyo_sensor">
	      <pose>0 0 0 0 0 0</pose>
	      <visualize>false</visualize>
	      <update_rate>100</update_rate>
	      <ray>
	        <scan>
	          <horizontal>
	            <samples>720</samples>
	            <resolution>1</resolution>
	            <min_angle>-3.1416</min_angle>
	            <max_angle>3.1416</max_angle>
	          </horizontal>
	        </scan>
	        <range>
	          <min>0.50</min>
	          <max>5.0</max>
	          <resolution>0.1</resolution>
	        </range>
	        <noise>
	          <type>gaussian</type>
	          <!-- Noise parameters based on published spec for Hokuyo laser
	               achieving "+-30mm" accuracy at range < 10m.  A mean of 0.0m and
	               stddev of 0.01m will put 99.7% of samples within 0.03m of the true
	               reading. -->
	          <mean>0.0</mean>
	          <stddev>0.01</stddev>
	        </noise>
	      </ray>
	      <plugin name="gazebo_ros_head_hokuyo_controller" filename="libgazebo_ros_gpu_laser.so">
	        <topicName>scan</topicName>
	        <frameName>laser</frameName>
	      </plugin>
	    </sensor>
</gazebo>

<gazebo>
  	<plugin name="differential_drive_controller" filename="libgazebo_ros_diff_drive.so">
		    <alwaysOn>true</alwaysOn>
		    <legacyMode>false</legacyMode>
		    <updateRate>100</updateRate>
		    <leftJoint>left_back_wheel_joint</leftJoint>
		    <rightJoint>right_back_wheel_joint</rightJoint>
		    <wheelSeparation>${chassis_width}</wheelSeparation>
		    <wheelDiameter>${2 * wheel_radius}</wheelDiameter>
		    <wheelTorque>10</wheelTorque>
		    <commandTopic>cmd_vel</commandTopic>
		    <odometryTopic>odom</odometryTopic>
		    <odometryFrame>odom</odometryFrame>
		    <robotBaseFrame>base_link</robotBaseFrame>
        <publishOdomTF>true</publishOdomTF>
  	</plugin>
</gazebo>



</robot>